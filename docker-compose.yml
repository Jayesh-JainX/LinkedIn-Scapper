version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: linkedin_research_db
    environment:
      POSTGRES_DB: linkedin_research
      POSTGRES_USER: linkedin_user
      POSTGRES_PASSWORD: linkedin_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - linkedin_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: linkedin_research_backend
    environment:
      - DATABASE_URL=postgresql://linkedin_user:linkedin_password@postgres:5432/linkedin_research
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=False
      - LOG_LEVEL=INFO
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - linkedin_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /dev/shm:/dev/shm # For Chrome/Selenium

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: linkedin_research_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - linkedin_network
    restart: unless-stopped

  # Redis (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: linkedin_research_redis
    ports:
      - "6379:6379"
    networks:
      - linkedin_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  linkedin_network:
    driver: bridge
